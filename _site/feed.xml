<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-01-22T10:01:14+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">MOnd Blog</title><subtitle>Personal blog about computer vision, deep learning, math, and some random stuff, too.</subtitle><entry><title type="html">TH - A fabricated hard-to-pronounce story</title><link href="http://localhost:4000/english/2023/01/22/TH.html" rel="alternate" type="text/html" title="TH - A fabricated hard-to-pronounce story" /><published>2023-01-22T07:00:00+00:00</published><updated>2023-01-22T07:00:00+00:00</updated><id>http://localhost:4000/english/2023/01/22/TH</id><content type="html" xml:base="http://localhost:4000/english/2023/01/22/TH.html">&lt;h1 id=&quot;motivation&quot;&gt;Motivation&lt;/h1&gt;

&lt;p&gt;Since I am a Slovakian, my native tongue does not have the &lt;strong&gt;&lt;em&gt;TH&lt;/em&gt; sound&lt;/strong&gt; that is &lt;strong&gt;ubiquitous in English&lt;/strong&gt; in the pronunciation repertoire. As a result, when learning the English language, it is of paramount importance to master both the voiced the unvoiced variation of the &lt;strong&gt;&lt;em&gt;TH&lt;/em&gt;&lt;/strong&gt; to significantly enhance how the speaker sounds. Even though it is not a panacea for everything, especially if the endeavor is to suppress the underlying accent, it is, by all means, a substantial leap forward to achieving more pleasant speaking experience.&lt;/p&gt;

&lt;p&gt;All in all, I like the language itself, so why not learn it properly, right? In what follows, I present some &lt;strong&gt;purely fabricated story&lt;/strong&gt; that is supposed to convey a reasonable plot, but, more importantly, it is written in a way to &lt;strong&gt;exercise the &lt;em&gt;TH&lt;/em&gt; sound&lt;/strong&gt; by incorporating it &lt;strong&gt;as many times as possible&lt;/strong&gt; in this short text. For the best experience, &lt;strong&gt;read it out loud&lt;/strong&gt;, especially if you’re not native, like me!&lt;/p&gt;

&lt;h1 id=&quot;the-story-itself-the-theft-of-the-thorny-roses&quot;&gt;The story itself: “&lt;strong&gt;&lt;em&gt;The Theft of the Thorny Roses&lt;/em&gt;&lt;/strong&gt;”&lt;/h1&gt;

&lt;p&gt;A theft has been reported to have happened on Thanksgiving Day in a well-thriving theater at three a. m. The theater is situated on the northern side of South Carolina. The thief, named Thomas Thachedath, is a thirty-three year old man who threatened this day in his thin thesis with the theme “The Theft of Thorny Roses”, a hitherto unassuming treatise dismissed beneath the surface of public attention as everyone thought that he would not carry out that deed.&lt;/p&gt;

&lt;p&gt;However, he decided to fulfill the act this Thursday to quench his thirst for the theft. Thanks to his thorough, in-depth knowledge of the security within the theater, the crime was thereby attainable. “That must have been a thrilling act for him. He thought he could get through his moral threshold and get away with it,” says the chief of the police department, Arthur Keith.&lt;/p&gt;

&lt;p&gt;The police authorities state that an unfathomable thirty-three thousand and three hundred and thirty-three thorny roses were stolen. They were thrown out through the three windows and then taken away by car through a three-lane road that raced into adverse weather conditions.&lt;/p&gt;

&lt;p&gt;Although we think that the number of thorny roses set forth in the press is exaggerated, they claim that this is allegedly the truth. Nevertheless, something is wrong. A thoughtful reader who thinks about this for a few seconds realizes that this simply interferes with logic Therefore, this article should be treated as a theory thought up by the police authorities.&lt;/p&gt;

&lt;p&gt;To reveal the truth, nothing has been stolen in the end, thankfully. This preposterous act of misinformation could be thought of as an attempt to threaten the peace of Thanksgiving Day. The “thief” was a guy detested by one-third of the town’s population. Their loathing is exhibited throughout the thoroughly intact and biased community. They say he should visit a therapist in order to get over his problems. On the other hand, he says they should think about themselves in the first place. Thus, he should take a deep breath and come to terms with their stance. Notwithstanding the truthfulness (or lack thereof) of this story, you would rather read a thousand times about a fake theft than once about a real one, don’t you think?&lt;/p&gt;

&lt;p&gt;Author: &lt;em&gt;Milan Ondrašovič&lt;/em&gt;, “&lt;strong&gt;The Theory&lt;/strong&gt;” magazine, 22. 01. 2023.&lt;/p&gt;</content><author><name></name></author><category term="english" /><summary type="html">A fabricated story with the goal of practicing the TH sound pronunciation</summary></entry><entry><title type="html">Output Formatting In Python</title><link href="http://localhost:4000/programming/2023/01/01/python_formatting.html" rel="alternate" type="text/html" title="Output Formatting In Python" /><published>2023-01-01T07:00:00+00:00</published><updated>2023-01-01T07:00:00+00:00</updated><id>http://localhost:4000/programming/2023/01/01/python_formatting</id><content type="html" xml:base="http://localhost:4000/programming/2023/01/01/python_formatting.html">&lt;h1 id=&quot;motivation&quot;&gt;Motivation&lt;/h1&gt;

&lt;p&gt;In this post, I would like to cover various ways of handling &lt;strong&gt;output formatting&lt;/strong&gt; in &lt;a href=&quot;https://en.wikipedia.org/wiki/Python_(programming_language)&quot;&gt;Python&lt;/a&gt;. Despite the fact that the topic of &lt;strong&gt;printing&lt;/strong&gt; is one of the most fundamental ones, I have to admit that it does not cease to amaze me how the routine work of printing output can be enhanced with new &lt;a href=&quot;https://en.wikipedia.org/wiki/Python_(programming_language)&quot;&gt;Python&lt;/a&gt; releases. In light of this, my endeavor is to highlight some key aspects I consider relevant with a &lt;strong&gt;huge time-saving potential&lt;/strong&gt; when it comes to working with output (e.g., during debugging).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Mastery&lt;/strong&gt; of &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt; formatting&lt;/strong&gt; yields &lt;strong&gt;efficiency&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Disclaimer: This article is by no means an exhaustive elaboration of output formatting. It serves merely as a basis for inspiration (and personal brain dump obviously) and further individual research into specific topics of interest.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;c-style-strings&quot;&gt;C-style Strings&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;C-style strings&lt;/strong&gt; are the most &lt;strong&gt;basic approach&lt;/strong&gt;, and perhaps the &lt;strong&gt;most limited one&lt;/strong&gt;. As the name suggests, it reflects the formatting patterns developed as part of the &lt;a href=&quot;https://en.wikipedia.org/wiki/C_(programming_language)&quot;&gt;C programming language&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is the &lt;strong&gt;oldest method&lt;/strong&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt; formatting that relies on the use of &lt;strong&gt;modulo&lt;/strong&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%&lt;/code&gt;) &lt;strong&gt;operator&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;C-style strings&lt;/strong&gt; are &lt;strong&gt;basic&lt;/strong&gt; and &lt;strong&gt;limited approach&lt;/strong&gt;, practically &lt;strong&gt;obsolete&lt;/strong&gt; nowadays.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here are several examples.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Guido&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;van Rossum&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;66&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s %s is %d years old.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Guido van Rossum is 66 years old.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;year_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;365.242196&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The year is %.8f days long.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The year is 365.24219600 days long.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It’s important to note that the &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt; formatting operator&lt;/strong&gt; shown above requires &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tuple&lt;/code&gt; as an argument. So, when printing the contents of a single &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tuple&lt;/code&gt;, one has to be extra careful.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt; formatting&lt;/strong&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%&lt;/code&gt;) &lt;strong&gt;operator&lt;/strong&gt; requires &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tuple&lt;/code&gt; as an &lt;strong&gt;argument&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Consider the following example.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fibonacci_seq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Fibonacci sequence %s.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fibonacci_seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

Cell In[4], line 3
      1 fibonacci_seq = (1, 1, 2, 3, 5, 8)
----&amp;gt; 3 print(&quot;Fibonacci sequence %s.&quot; % fibonacci_seq)


TypeError: not all arguments converted during string formatting
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since the operator &lt;strong&gt;expects&lt;/strong&gt; a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tuple&lt;/code&gt;, it, therefore, tries to print &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;len(fibonacci_seq)&lt;/code&gt; elements instead of just one.&lt;/p&gt;

&lt;p&gt;To address this, an ugly fix like the one below would work…&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Fibonacci sequence %d, %d, %d, %d, %d, %d.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fibonacci_seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Fibonacci sequence 1, 1, 2, 3, 5, 8.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;disadvantages&lt;/strong&gt; are obvious, the most notable one being &lt;strong&gt;violating&lt;/strong&gt; the &lt;a href=&quot;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&quot;&gt;Don’t-Repeat-Yourself (DRY)&lt;/a&gt; &lt;strong&gt;principle&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To remedy this, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tuple&lt;/code&gt; needs to be &lt;strong&gt;enclosed&lt;/strong&gt; into another &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tuple&lt;/code&gt; to make it work.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fibonacci_seq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Fibonacci sequence %s.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fibonacci_seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Fibonacci sequence (1, 1, 2, 3, 5, 8).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The aforementioned &lt;strong&gt;C-style strings&lt;/strong&gt; have become &lt;strong&gt;obsolete&lt;/strong&gt; and I would &lt;strong&gt;advise against adopting it in new codebases&lt;/strong&gt;. In what follows, I’ll cover more “comfortable” ways to handle printing output.&lt;/p&gt;

&lt;h1 id=&quot;using-the-format-method&quot;&gt;Using the “format” Method&lt;/h1&gt;

&lt;p&gt;Introduced in &lt;a href=&quot;https://peps.python.org/pep-3101/&quot;&gt;PEP 3101&lt;/a&gt;, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;format&lt;/code&gt; method of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt; class is a &lt;strong&gt;new way&lt;/strong&gt; of defining &lt;strong&gt;output format&lt;/strong&gt;. The modern &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f-string&lt;/code&gt;s that will be covered later are more or less a &lt;a href=&quot;https://en.wikipedia.org/wiki/Syntactic_sugar&quot;&gt;syntactic sugar&lt;/a&gt; for the concepts outlined below.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Guido&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;van Rossum&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;66&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{} {} is {} years old.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Guido van Rossum is 66 years old.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;year_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;365.242196&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The year is {:.8f} days long.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The year is 365.24219600 days long.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Just for the record, &lt;strong&gt;formatting floating point&lt;/strong&gt; values (i.e., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;float&lt;/code&gt;s) provides a lot &lt;strong&gt;more options&lt;/strong&gt;, since its general &lt;strong&gt;format specification&lt;/strong&gt; is&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{[index]:[width][.precision][type]}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On top of all this, the values to be printed can be passed as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dict&lt;/code&gt; where the &lt;strong&gt;keys&lt;/strong&gt; are the &lt;strong&gt;identifiers&lt;/strong&gt;, serving some sort of a &lt;strong&gt;template&lt;/strong&gt; mechanism.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;{firstname} {lastname} is {age} years old.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Guido van Rossum is 66 years old.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dict&lt;/code&gt;-based parameters come in handy in the face of possible &lt;strong&gt;duplicity&lt;/strong&gt;, e.g., when &lt;strong&gt;violating&lt;/strong&gt; the already mentioned &lt;a href=&quot;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&quot;&gt;Don’t-Repeat-Yourself (DRY)&lt;/a&gt; &lt;strong&gt;principle&lt;/strong&gt;. The &lt;strong&gt;same argument&lt;/strong&gt; can thus be &lt;strong&gt;reused&lt;/strong&gt; at &lt;strong&gt;multiple places&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;format&lt;/code&gt; method also &lt;strong&gt;accepts&lt;/strong&gt; a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dict&lt;/code&gt; of values to print, thereby allowing &lt;strong&gt;reusability&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;year_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;365.242196&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;The year does not have just {n_days:.0f} days, but {n_days:.6f} days exactly!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;n_days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year_length&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The year does not have just 365 days, but 365.242196 days exactly!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;modern-so-called-f-strings&quot;&gt;Modern So-called “f-strings”&lt;/h1&gt;

&lt;h2 id=&quot;basic-usage&quot;&gt;Basic usage&lt;/h2&gt;

&lt;p&gt;Long story short, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f-strings&lt;/code&gt; are pretty much an extension that makes calling the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;format&lt;/code&gt; method easier. It relies on the use of a &lt;strong&gt;single&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f&lt;/code&gt; &lt;strong&gt;character&lt;/strong&gt; at the &lt;strong&gt;beginning&lt;/strong&gt; of the &lt;strong&gt;format string&lt;/strong&gt;.
More specifically, this feature was introduced in &lt;a href=&quot;https://peps.python.org/pep-0498/&quot;&gt;PEP 498&lt;/a&gt; as a &lt;strong&gt;new string formatting mechanism&lt;/strong&gt; dubbed &lt;strong&gt;Literal String Interpolation&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f-strings&lt;/code&gt; are also known as &lt;strong&gt;Literal String Interpolation&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f-strings&lt;/code&gt; are a &lt;a href=&quot;https://en.wikipedia.org/wiki/Syntactic_sugar&quot;&gt;syntactic sugar&lt;/a&gt; for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;format&lt;/code&gt; method.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Guido&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;van Rossum&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;66&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; is &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; years old.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Guido van Rossum is 66 years old.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;year_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;365.242196&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The year is &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; days long.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The year is 365.24219600 days long.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As for me, the &lt;strong&gt;conciseness&lt;/strong&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f-strings&lt;/code&gt; is literally incontrovertible.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f-strings&lt;/code&gt; are a &lt;strong&gt;manifestation&lt;/strong&gt; of &lt;strong&gt;brevity&lt;/strong&gt; in conjunction &lt;strong&gt;explicitness&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;formatting---under-the-hood&quot;&gt;Formatting - under the hood&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Note: The upcoming discussion also applies to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;format&lt;/code&gt; method we touched upon previously.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the case of having to &lt;strong&gt;define custom formatting&lt;/strong&gt; rules, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__format__&lt;/code&gt; method can be &lt;strong&gt;overridden&lt;/strong&gt;. The &lt;strong&gt;argument&lt;/strong&gt; that is &lt;strong&gt;specified after the colon&lt;/strong&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt; character) is provided as a &lt;strong&gt;method parameter&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Custom formatting rules&lt;/strong&gt; can be &lt;strong&gt;defined&lt;/strong&gt; within the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__format__&lt;/code&gt; method.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;strong&gt;parameter&lt;/strong&gt; is of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str&lt;/code&gt; type and is &lt;strong&gt;empty&lt;/strong&gt; if &lt;strong&gt;no format&lt;/strong&gt; is specified.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__format__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;full&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; (&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;)&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;unrecognized format, expected empty of `full`, got &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Guido von Rossum&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;66&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Guido von Rossum
Guido von Rossum (66)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;other-object-representation-related-methods&quot;&gt;Other object representation-related methods&lt;/h2&gt;

&lt;p&gt;Please, beware that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print&lt;/code&gt; function calls &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__repr__&lt;/code&gt; by default, so &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print(person)&lt;/code&gt; would &lt;strong&gt;not invoke&lt;/strong&gt; the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__format__&lt;/code&gt; method in the above example. That’s why &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print(f&quot;{person}&quot;)&lt;/code&gt; had to be used instead.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The trio of &lt;strong&gt;object string representation methods&lt;/strong&gt; consists of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__repr__&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__str__&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__format__&lt;/code&gt;, where each serves for a &lt;strong&gt;completely different purpose&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Note: A deeper elaboration is out of the scope of this article, so I encourage the reader to explore the topic further by themselves.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is what happens if the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__repr__&lt;/code&gt; method is not overrridden (which, in our case, is not).&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;__main__.Person object at 0x7f19082d3dc0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__repr__&lt;/code&gt; method can be called &lt;strong&gt;directly&lt;/strong&gt; using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;!r&lt;/code&gt; format modifier.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;__main__.Person object at 0x7f19082d3dc0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here is an attempt to &lt;strong&gt;invoke&lt;/strong&gt; the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__str__&lt;/code&gt; method of the object, again, demonstrating the &lt;strong&gt;default behavior&lt;/strong&gt; as the implementation is &lt;strong&gt;missing&lt;/strong&gt; in our example.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;__main__.Person object at 0x7f19082d3dc0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s then &lt;strong&gt;define&lt;/strong&gt; &lt;strong&gt;custom&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__str__&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__repr__&lt;/code&gt; methods to see the difference. A short sidenote, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__repr__&lt;/code&gt; method is &lt;strong&gt;reserved&lt;/strong&gt; for &lt;strong&gt;string representation&lt;/strong&gt; of the &lt;strong&gt;object&lt;/strong&gt; itself. It should be possible to &lt;strong&gt;construct&lt;/strong&gt; the object from its &lt;strong&gt;string representation&lt;/strong&gt; if the &lt;strong&gt;expression&lt;/strong&gt; is evaluated (e.g., using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eval&lt;/code&gt; built-in function). In a math-like fashion, one could claim that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assert eval(object_instance.__repr__()) == object_instance&lt;/code&gt;, assuming that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__equals__&lt;/code&gt; method is properly overridden.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; years old&quot;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__repr__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__class__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;)&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Geoffrey Hinton&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Geoffrey Hinton, 75 years old
Geoffrey Hinton, 75 years old
Person(&apos;Geoffrey Hinton&apos;, 75)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To demonstrate the &lt;strong&gt;purpose&lt;/strong&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__repr__&lt;/code&gt; method, the expression it produces should be &lt;strong&gt;sufficient&lt;/strong&gt; to construct the object &lt;strong&gt;from scratch&lt;/strong&gt; when &lt;strong&gt;evaluated&lt;/strong&gt; (using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eval&lt;/code&gt;), so…&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;person_new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__repr__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person_new&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;person_new&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Geoffrey Hinton, 75 years old
Geoffrey Hinton, 75 years old
Person(&apos;Geoffrey Hinton&apos;, 75)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;advanced-formatting&quot;&gt;Advanced formatting&lt;/h2&gt;

&lt;p&gt;This section covers some &lt;strong&gt;advanced&lt;/strong&gt; formatting examples that may significantly &lt;strong&gt;enhance&lt;/strong&gt; the &lt;strong&gt;output quality&lt;/strong&gt; as well as &lt;strong&gt;save&lt;/strong&gt; considerable amount of &lt;strong&gt;time&lt;/strong&gt; when &lt;strong&gt;debugging&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;explicit-ascii-representation&quot;&gt;Explicit ASCII representation&lt;/h3&gt;

&lt;p&gt;Every now and then, primarily when &lt;strong&gt;debugging&lt;/strong&gt;, it might be useful to obtain the exact &lt;a href=&quot;https://en.wikipedia.org/wiki/ASCII&quot;&gt;ASCII&lt;/a&gt; representation of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt;, especially when it contains &lt;a href=&quot;https://en.wikipedia.org/wiki/Unicode&quot;&gt;UNICODE&lt;/a&gt; characters. To this end, there is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;!a&lt;/code&gt; &lt;strong&gt;format modifier&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;card_suits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;diamonds (♦), clubs (♣), hearts (♥) and spades (♠)&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_suits&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;card_suits&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;diamonds (♦), clubs (♣), hearts (♥) and spades (♠)
&apos;diamonds (\u2666), clubs (\u2663), hearts (\u2665) and spades (\u2660)&apos;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;expression-representation&quot;&gt;Expression Representation&lt;/h3&gt;

&lt;p&gt;When &lt;strong&gt;debugging&lt;/strong&gt; or implementing a &lt;strong&gt;logging output&lt;/strong&gt; (e.g., using the &lt;a href=&quot;https://docs.python.org/3/library/logging.html&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logging&lt;/code&gt;&lt;/a&gt; module), one may often wish to &lt;strong&gt;print&lt;/strong&gt; the &lt;strong&gt;value&lt;/strong&gt; of some &lt;strong&gt;variable&lt;/strong&gt; together with its &lt;strong&gt;name&lt;/strong&gt;, as shown below.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;total = &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;total = 10.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When the &lt;strong&gt;name&lt;/strong&gt; of the variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;total&lt;/code&gt; changes, the &lt;strong&gt;output&lt;/strong&gt; above is &lt;strong&gt;no longer valid&lt;/strong&gt;. Nowadays, &lt;strong&gt;refactoring&lt;/strong&gt; tools, even in &lt;a href=&quot;https://en.wikipedia.org/wiki/Dynamic_programming_language&quot;&gt;dynamically typed languages&lt;/a&gt; such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Python_(programming_language)&quot;&gt;Python&lt;/a&gt;, are able to handle &lt;strong&gt;variable renaming&lt;/strong&gt; reasonably well. However, these tools would have hard time figuring out that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;total = &quot;&lt;/code&gt; text is also associated with the variable name. Consequently, one has to update the output statement accordingly, engaging in duplicite work that we should strive to avoid in the first place.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;new formatting specification&lt;/strong&gt; comes to the rescue with &lt;strong&gt;Python 3.8&lt;/strong&gt; and above. The syntax speaks for itself, at least for me….&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;total=10.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;compactness&lt;/strong&gt; is simply staggering.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f&quot;{var=}&quot;&lt;/code&gt; &lt;strong&gt;format&lt;/strong&gt; ties the &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt; representation&lt;/strong&gt; of the &lt;strong&gt;expression&lt;/strong&gt; with its &lt;strong&gt;value&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Moreover, it allows to &lt;strong&gt;specify spaces&lt;/strong&gt; as well, in order to match our initial output exactly.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;total = 10.
total= 10.
total =10.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But that’s not all. As suggested above, it is the &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt; representation&lt;/strong&gt; of the &lt;strong&gt;expression&lt;/strong&gt;, not just the &lt;strong&gt;variable name&lt;/strong&gt;, that gets printed. Furthermore, all the &lt;strong&gt;formatting options&lt;/strong&gt; discussed so far can be applied, too.&lt;/p&gt;

&lt;p&gt;All right, as &lt;a href=&quot;https://en.wikipedia.org/wiki/Linus_Torvalds&quot;&gt;Linux Torvalds&lt;/a&gt; succintly remarked that &lt;em&gt;“Talk is cheap. Show me the code.”&lt;/em&gt;, let’s have a look at more capabilities of this fabulous feature.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;total = 10
total // 3 = 3
total / 3 = 3.333333
total % 3 = 1
(total // 2) ** 2 = 25
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;printing-date-and-time-information&quot;&gt;Printing date and time information&lt;/h3&gt;

&lt;p&gt;Another useful example how &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f-strings&lt;/code&gt; might be beneficial is when printing &lt;strong&gt;date&lt;/strong&gt; and &lt;strong&gt;time&lt;/strong&gt; information.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;curr_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Today&apos;s date is: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;curr_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# Day, month, and year.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Today&apos;s date is: 10/01/2023.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;templates&quot;&gt;Templates&lt;/h1&gt;

&lt;p&gt;To me, a somehow &lt;strong&gt;less known&lt;/strong&gt; way to specify &lt;strong&gt;output format&lt;/strong&gt; is to &lt;strong&gt;define&lt;/strong&gt; a &lt;strong&gt;template&lt;/strong&gt;, as proposed in &lt;a href=&quot;https://peps.python.org/pep-0292/&quot;&gt;PEP 292&lt;/a&gt;. The format exploits &lt;strong&gt;placeholder names&lt;/strong&gt; indicated by the dollar sign (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt; character) conforming to the rules of &lt;a href=&quot;https://en.wikipedia.org/wiki/Python_(programming_language)&quot;&gt;Python&lt;/a&gt; identifier naming, i.e., alphanumeric characters including underscores, concretely &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0-9a-zA-Z_&lt;/code&gt;. As the &lt;strong&gt;common practice&lt;/strong&gt; dictates, writing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$&lt;/code&gt; signifies &lt;strong&gt;escaping&lt;/strong&gt; to the parser, thus producing just a single &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt; on the output.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Hey, $first_name $last_name. How old are you?
I am $age years old. Why are you asking?&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;substitute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Donald&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Knuth&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;84&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hey, Donald Knuth. How old are you?
I am 84 years old. Why are you asking?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;In this post, I tried to provide brief introduction to &lt;strong&gt;output formatting&lt;/strong&gt; in &lt;a href=&quot;https://en.wikipedia.org/wiki/Python_(programming_language)&quot;&gt;Python&lt;/a&gt; with focus on &lt;strong&gt;usefulness&lt;/strong&gt; and &lt;strong&gt;inspiration&lt;/strong&gt; rather than exhaustive elaboration of details. In the context of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt; formatting, this language has a great deal of built-in capabilities that evelopers should exploit instead of re-inventing the wheel or perofrming duplicite tasks in their day-to-day programming workflow.&lt;/p&gt;

&lt;p&gt;I hope you learned something new.&lt;/p&gt;</content><author><name></name></author><category term="programming" /><summary type="html">A brief elaboration on various approaches to output formatting in Python.</summary></entry><entry><title type="html">Exponential Learning Rate Scheduler</title><link href="http://localhost:4000/research/2022/07/08/learning_rate_scheduler.html" rel="alternate" type="text/html" title="Exponential Learning Rate Scheduler" /><published>2022-07-08T07:00:00+00:00</published><updated>2022-07-08T07:00:00+00:00</updated><id>http://localhost:4000/research/2022/07/08/learning_rate_scheduler</id><content type="html" xml:base="http://localhost:4000/research/2022/07/08/learning_rate_scheduler.html">&lt;h1 id=&quot;motivation&quot;&gt;Motivation&lt;/h1&gt;

&lt;p&gt;When training &lt;strong&gt;deep neural networks&lt;/strong&gt;, &lt;strong&gt;learning rate&lt;/strong&gt; is arguably a hyperparameter of paramount importance. However, in many scenarios, altering the learning rate during the model training may help not only help stabilize the training but also help find better local minima. There are various ways to approach so-called &lt;strong&gt;scheduling&lt;/strong&gt; the &lt;strong&gt;learning rate&lt;/strong&gt; during the training. Deep learning frameworks such as &lt;a href=&quot;https://pytorch.org/&quot;&gt;PyTorch&lt;/a&gt; or &lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;TensorFlow&lt;/a&gt; provide basic infrastructure that supports this functionality. One of the approaches is based on using &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_decay&quot;&gt;exponential decay&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This short post aims to provide a simple guide regarding how to derive the necessary parameters for a learning rate scheduler using exponential decay given that we know our &lt;strong&gt;base learning rate&lt;/strong&gt;, &lt;strong&gt;target learning rate&lt;/strong&gt; we want to reach, the &lt;strong&gt;total number of epochs&lt;/strong&gt; as well as the &lt;strong&gt;number of warm-up epochs&lt;/strong&gt; (in which the learning rate remains untouched).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: To be honest, I had to use re-derive this formula multiple times. Thus, I decided to save the processes as part of a blog post for future reference at least for me, if not for anyone else.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this post, we will use the &lt;strong&gt;TensorFlow&lt;/strong&gt; deep learning framework. Nevertheless, the reasoning and methodology are very general and can be applied to any scenario involving finding the parameters of a function for exponential decay.&lt;/p&gt;

&lt;p&gt;More specifically, we will strive to implement the scheduling &lt;strong&gt;function&lt;/strong&gt; for the &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/LearningRateScheduler&quot;&gt;LearningRateScheduler&lt;/a&gt; class representing a &lt;a href=&quot;https://en.wikipedia.org/wiki/Callback_(computer_programming)&quot;&gt;callback&lt;/a&gt; function. Its instance can be constructed as&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keras&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LearningRateScheduler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The arguments are&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;argument&lt;/th&gt;
      &lt;th&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;schedule&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;a function that takes an epoch index (integer (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int&lt;/code&gt;), indexed from $0$) and current learning rate (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;float&lt;/code&gt;) as inputs and returns a new learning rate as output (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;float&lt;/code&gt;).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;verbose&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int&lt;/code&gt;. $0$ - quiet, $1$ - update messages.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;At the beginning of every epoch, this callback gets the updated learning rate value from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;schedule&lt;/code&gt; function. Please, refer to the dedicated &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/LearningRateScheduler&quot;&gt;documentation&lt;/a&gt; section for further details.&lt;/p&gt;

&lt;h1 id=&quot;formula-derivation&quot;&gt;Formula Derivation&lt;/h1&gt;

&lt;p&gt;Let $B$ be the &lt;strong&gt;base learning rate&lt;/strong&gt;, $T$ be the &lt;strong&gt;target learning rate&lt;/strong&gt;, $N$ be the &lt;strong&gt;total number of epochs&lt;/strong&gt; and $W$ be the &lt;strong&gt;number of warm-up epochs&lt;/strong&gt;. The aim is to find a parameter $\lambda$, i.e., the &lt;strong&gt;decay rate&lt;/strong&gt;, so that our learning rate scheduler equals $B$ for all the warm-up epochs including the first “real” epochs and after the $N - \left (W + 1 \right)$ epochs it reaches the value of $T$.&lt;/p&gt;

&lt;p&gt;Generally speaking, we want to find a function that takes two parameters, the current &lt;strong&gt;epoch index&lt;/strong&gt; $i$ (indexed from $0$) and the current &lt;strong&gt;learning rate&lt;/strong&gt; $r$ and returns a &lt;strong&gt;new learning rate&lt;/strong&gt; $\tilde{r}$. So,&lt;/p&gt;

\[f \left( i, r \right) = \tilde{r}.\]

&lt;p&gt;Considering the aforementioned requirements, the &lt;strong&gt;decay rate&lt;/strong&gt; $\lambda$ is equal to&lt;/p&gt;

\[\lambda = \frac{\log \left( \frac{T}{B} \right)}{E - \left(W + 1 \right)}.\]

&lt;p&gt;Thus, the sought &lt;strong&gt;function&lt;/strong&gt; $f \left( \cdot \right)$ can be defined as&lt;/p&gt;

\[f \left( i, r \right) =
\begin{cases}
    B \qquad &amp;amp; \text{if } i \leq W,\\
    B \cdot e^{\lambda} \qquad &amp;amp; \text{otherwise}.
\end{cases}\]

&lt;h1 id=&quot;implementation&quot;&gt;Implementation&lt;/h1&gt;

&lt;p&gt;The only required import is:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The derived formula can be transformed into a Python implementation as follows&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_lr_scheduler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_lr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target_lr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_epochs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_warmup_epochs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n_update_epochs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_epochs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_warmup_epochs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;decay_rate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target_lr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_lr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_update_epochs&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;_scheduler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_warmup_epochs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_lr&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decay_rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_scheduler&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above function creates another function which is then passed to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;model.fit(...)&lt;/code&gt; method as a callback. Concretely, let &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;model&lt;/code&gt; be a TensorFlow &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/keras/Model&quot;&gt;model&lt;/a&gt; instance. When calling its &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fit()&lt;/code&gt; method, one of the parameters is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;callbacks&lt;/code&gt;, a list of callback functions to be called during the training.&lt;/p&gt;

&lt;p&gt;Assume we have the following variables in our &lt;strong&gt;configuration&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;BASE_LR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;TARGET_LR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;N_EPOCHS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;N_WARMUP_EPOCHS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, the &lt;strong&gt;learning rate scheduler&lt;/strong&gt; can be &lt;strong&gt;instantiated&lt;/strong&gt; and utilized during the training as&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;lr_scheduler_callback&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_lr_scheduler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;base_lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BASE_LR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;target_lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TARGET_LR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n_epochs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N_EPOCHS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n_warmup_epochs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N_WARMUP_EPOCHS&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epochs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N_EPOCHS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lr_scheduler_callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;implementation-verification&quot;&gt;Implementation Verification&lt;/h1&gt;

&lt;p&gt;Here is a table that shows how the learning rate &lt;strong&gt;progresses&lt;/strong&gt; with respect to different parameters.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;$B$&lt;/th&gt;
      &lt;th&gt;$T$&lt;/th&gt;
      &lt;th&gt;$N$&lt;/th&gt;
      &lt;th&gt;$W$&lt;/th&gt;
      &lt;th&gt;$i = 0$&lt;/th&gt;
      &lt;th&gt;$i = 1$&lt;/th&gt;
      &lt;th&gt;$i = 2$&lt;/th&gt;
      &lt;th&gt;$i = 3$&lt;/th&gt;
      &lt;th&gt;$i = 4$&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$10^{-1}$&lt;/td&gt;
      &lt;td&gt;$10^{-6}$&lt;/td&gt;
      &lt;td&gt;$5$&lt;/td&gt;
      &lt;td&gt;$0$&lt;/td&gt;
      &lt;td&gt;$0.100000$&lt;/td&gt;
      &lt;td&gt;$0.005623$&lt;/td&gt;
      &lt;td&gt;$0.000316$&lt;/td&gt;
      &lt;td&gt;$0.000018$&lt;/td&gt;
      &lt;td&gt;$0.000001$&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$10^{-2}$&lt;/td&gt;
      &lt;td&gt;$10^{-4}$&lt;/td&gt;
      &lt;td&gt;$5$&lt;/td&gt;
      &lt;td&gt;$1$&lt;/td&gt;
      &lt;td&gt;$0.010000$&lt;/td&gt;
      &lt;td&gt;$0.010000$&lt;/td&gt;
      &lt;td&gt;$0.002154$&lt;/td&gt;
      &lt;td&gt;$0.000464$&lt;/td&gt;
      &lt;td&gt;$0.000100$&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$10^{-2}$&lt;/td&gt;
      &lt;td&gt;$10^{-5}$&lt;/td&gt;
      &lt;td&gt;$5$&lt;/td&gt;
      &lt;td&gt;$2$&lt;/td&gt;
      &lt;td&gt;$0.010000$&lt;/td&gt;
      &lt;td&gt;$0.010000$&lt;/td&gt;
      &lt;td&gt;$0.010000$&lt;/td&gt;
      &lt;td&gt;$0.000316$&lt;/td&gt;
      &lt;td&gt;$0.000010$&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;In this post, we covered how to &lt;strong&gt;derive&lt;/strong&gt; the &lt;strong&gt;decay rate&lt;/strong&gt; parameter for &lt;strong&gt;exponential decay function&lt;/strong&gt;. As for the real-world use case, we showed a direct application to &lt;strong&gt;learning rate scheduling&lt;/strong&gt; within the &lt;strong&gt;TensorFlow&lt;/strong&gt; deep learning framework.&lt;/p&gt;</content><author><name></name></author><category term="research" /><summary type="html">A short post regarding exponential learning rate scheduler.</summary></entry><entry><title type="html">My paper “Homography Ranking Based on Multiple Groups of Point Correspondences” is out</title><link href="http://localhost:4000/research/2021/09/08/homography_ranking_paper.html" rel="alternate" type="text/html" title="My paper “Homography Ranking Based on Multiple Groups of Point Correspondences” is out" /><published>2021-09-08T08:00:00+00:00</published><updated>2021-09-08T08:00:00+00:00</updated><id>http://localhost:4000/research/2021/09/08/homography_ranking_paper</id><content type="html" xml:base="http://localhost:4000/research/2021/09/08/homography_ranking_paper.html">&lt;h1 id=&quot;paper-information&quot;&gt;Paper information&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;: &lt;a href=&quot;https://www.mdpi.com/1424-8220/21/17/5752&quot;&gt;Homography Ranking Based on Multiple Groups of Point Correspondences&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Authors&lt;/strong&gt;: Milan Ondrašovič, Peter Tarábek&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Journal&lt;/strong&gt;: &lt;a href=&quot;https://www.mdpi.com/journal/sensors&quot;&gt;MDPI Sensors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Homography mapping is often exploited to remove perspective distortion in images and can be estimated using point correspondences of a known object (marker). We focus on scenarios with multiple markers placed on the same plane if their relative positions in the world are unknown, causing an indeterminate point correspondence. Existing approaches may only estimate an isolated homography for each marker and cannot determine which homography achieves the best reprojection over the entire image. We thus propose a method to rank isolated homographies obtained from multiple distinct markers to select the best homography. This method extends existing approaches in the post-processing stage, provided that the point correspondences are available and that the markers differ only by similarity transformation after rectification. We demonstrate the robustness of our method using a synthetic dataset and show an approximately 60% relative improvement over the random selection strategy based on the homography estimation from the OpenCV library.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;cite-my-work&quot;&gt;Cite my work&lt;/h1&gt;

&lt;h2 id=&quot;text-format&quot;&gt;Text format&lt;/h2&gt;

&lt;p&gt;Ondrašovič, M.; Tarábek, P. &lt;em&gt;Homography Ranking Based on Multiple Groups of Point Correspondences&lt;/em&gt;. Sensors 2021, 21, 5752. https://doi.org/10.3390/s21175752&lt;/p&gt;

&lt;h2 id=&quot;bibtext-format&quot;&gt;BibText format&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@Article{s21175752,
    AUTHOR = {Ondrašovič, Milan and Tarábek, Peter},
    TITLE = {Homography Ranking Based on Multiple Groups of Point Correspondences},
    JOURNAL = {Sensors},
    VOLUME = {21},
    YEAR = {2021},
    NUMBER = {17},
    ARTICLE-NUMBER = {5752},
    URL = {https://www.mdpi.com/1424-8220/21/17/5752},
    ISSN = {1424-8220},
    ABSTRACT = {Homography mapping is often exploited to remove perspective distortion in images and can be estimated using point correspondences of a known object (marker). We focus on scenarios with multiple markers placed on the same plane if their relative positions in the world are unknown, causing an indeterminate point correspondence. Existing approaches may only estimate an isolated homography for each marker and cannot determine which homography achieves the best reprojection over the entire image. We thus propose a method to rank isolated homographies obtained from multiple distinct markers to select the best homography. This method extends existing approaches in the post-processing stage, provided that the point correspondences are available and that the markers differ only by similarity transformation after rectification. We demonstrate the robustness of our method using a synthetic dataset and show an approximately 60% relative improvement over the random selection strategy based on the homography estimation from the OpenCV library.},
    DOI = {10.3390/s21175752}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="research" /><summary type="html">A short post about my recently published MDPI Sensors journal paper.</summary></entry><entry><title type="html">My paper “Siamese Visual Object Tracking - A Survey” is out</title><link href="http://localhost:4000/research/2021/08/16/siamese_tracking_survey_paper.html" rel="alternate" type="text/html" title="My paper “Siamese Visual Object Tracking - A Survey” is out" /><published>2021-08-16T08:00:00+00:00</published><updated>2021-08-16T08:00:00+00:00</updated><id>http://localhost:4000/research/2021/08/16/siamese_tracking_survey_paper</id><content type="html" xml:base="http://localhost:4000/research/2021/08/16/siamese_tracking_survey_paper.html">&lt;h1 id=&quot;paper-information&quot;&gt;Paper information&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;: &lt;a href=&quot;https://ieeexplore.ieee.org/document/9503425&quot;&gt;Siamese Visual Object Tracking: A Survey&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Authors&lt;/strong&gt;: Milan Ondrašovič, Peter Tarábek&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Journal&lt;/strong&gt;: &lt;a href=&quot;https://ieeeaccess.ieee.org/&quot;&gt;IEEE Access&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Object tracking belongs to active research areas in computer vision. We are interested in matching-based trackers exploiting deep machine learning known as Siamese trackers. Their powerful capabilities stem from similarity learning. This tracking paradigm is promising due to its inherent balance between performance and efficiency, so trackers of this type are suitable for real-time generic object tracking. There is an upsurge in research interest in Siamese trackers and the lack of available specialized surveys in this category. In this survey, we aim to identify and elaborate on the most significant challenges the Siamese trackers face. Our goal is to answer what design decisions the authors made and what problems they attempted to solve in the first place. We thus perform an in-depth analysis of the core principles on which Siamese trackers operate with a discussion of incentives behind them. Besides, we provide an up-to-date qualitative and quantitative comparison of the prominent Siamese trackers on established benchmarks. Among other things, we discuss current trends in developing Siamese trackers. Our survey could help absorb the details about the underlying principles of Siamese trackers and the challenges they face.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;cite-my-work&quot;&gt;Cite my work&lt;/h1&gt;

&lt;h2 id=&quot;text-format&quot;&gt;Text format&lt;/h2&gt;

&lt;p&gt;M. Ondrašovič and P. Tarábek, “&lt;em&gt;Siamese Visual Object Tracking: A Survey,&lt;/em&gt;” in IEEE Access, vol. 9, pp. 110149-110172, 2021, doi: 10.1109/ACCESS.2021.3101988.&lt;/p&gt;

&lt;h2 id=&quot;bibtext-format&quot;&gt;BibText format&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@ARTICLE{9503425,
    author={Ondrašovič, Milan and Tarábek, Peter},
    journal={IEEE Access}, 
    title={Siamese Visual Object Tracking: A Survey}, 
    year={2021},
    volume={9},
    number={},
    pages={110149-110172},
    doi={10.1109/ACCESS.2021.3101988}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="research" /><summary type="html">A short post about my recently published IEEE Access journal paper.</summary></entry><entry><title type="html">My paper “Object Position Estimation from a Single Moving Camera” is out</title><link href="http://localhost:4000/research/2021/08/15/object_position_estimation_paper.html" rel="alternate" type="text/html" title="My paper “Object Position Estimation from a Single Moving Camera” is out" /><published>2021-08-15T08:00:00+00:00</published><updated>2021-08-15T08:00:00+00:00</updated><id>http://localhost:4000/research/2021/08/15/object_position_estimation_paper</id><content type="html" xml:base="http://localhost:4000/research/2021/08/15/object_position_estimation_paper.html">&lt;h1 id=&quot;paper-information&quot;&gt;Paper information&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;: &lt;a href=&quot;https://ieeexplore.ieee.org/document/9497523&quot;&gt;Object Position Estimation from a Single Moving Camera&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Authors&lt;/strong&gt;: Milan Ondrašovič, Peter Tarábek, Ondrej Šuch&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Conference&lt;/strong&gt;: &lt;a href=&quot;https://ieeexplore.ieee.org/xpl/conhome/9497502/proceeding&quot;&gt;2021 International Conference on Information and Digital Technologies (IDT)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since the article is accessible only for IEEE subscribers, you can &lt;strong&gt;request the full text&lt;/strong&gt; for private use via  &lt;a href=&quot;https://www.researchgate.net/publication/353593977_Object_Position_Estimation_from_a_Single_Moving_Camera?_sg=vX-pKX0KtT6IJMT7V3_vByovw8oz6R072y-D3l7L16aFihTwxFXTdbPDAIID-3Gukfk-Hy-Pa-JLPvKRrq-SbQwjMbrR_ZO4WtmWSAjh.cZv8g4RyJw-RblaqUA1o0UixoOE2qDkHMzhH1ys65uJndVjudgLfI5h9K0KhsQ5sePAKeViB8TMCny-2pVHyQQ&quot;&gt;ResearchGate&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;This paper deals with the position estimation of a road sign from a single camera attached to a vehicle. We developed, implemented, and tested two mathematical approaches based on triangulation when the object annotation in the form of a bounding box is provided. We created a synthetic dataset (a simulation of a car passing by a road sign) to test the methods in a controlled environment. Additionally, the real dataset was created by recording a car trip within a town. Results on the synthetic dataset showed that the position could be estimated within 1 m accuracy. In the case of the real dataset, we measured the accuracy to be up to 4.3 m depending on the distance from the object. We performed experiments with artificial noise on synthetic data to evaluate the impact of different types of noise. Our contribution consists of two computationally inexpensive methods for object position estimation that are easy to use as they do not require calibration of parameters.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;cite-my-work&quot;&gt;Cite my work&lt;/h1&gt;

&lt;h2 id=&quot;text-format&quot;&gt;Text format&lt;/h2&gt;

&lt;p&gt;M. Ondrašovič, P. Tarábek and O. Šuch, “&lt;em&gt;Object Position Estimation from a Single Moving Camera&lt;/em&gt;,” 2021 International Conference on Information and Digital Technologies (IDT), 2021, pp. 31-37, doi: 10.1109/IDT52577.2021.9497523.&lt;/p&gt;

&lt;h2 id=&quot;bibtext-format&quot;&gt;BibText format&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@INPROCEEDINGS{9497523,
    author={Ondrašovič, Milan and Tarábek, Peter and Šuch, Ondrej},
    booktitle={2021 International Conference on Information and Digital Technologies (IDT)}, 
    title={Object Position Estimation from a Single Moving Camera}, 
    year={2021},
    volume={},
    number={},
    pages={31-37},
    doi={10.1109/IDT52577.2021.9497523}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="research" /><summary type="html">A short post about my recently published IDT2021 conference paper.</summary></entry><entry><title type="html">My paper writing pipeline using LaTeX</title><link href="http://localhost:4000/tutorial/2021/08/09/my_paper_writing_pipeline.html" rel="alternate" type="text/html" title="My paper writing pipeline using LaTeX" /><published>2021-08-09T08:00:00+00:00</published><updated>2021-08-09T08:00:00+00:00</updated><id>http://localhost:4000/tutorial/2021/08/09/my_paper_writing_pipeline</id><content type="html" xml:base="http://localhost:4000/tutorial/2021/08/09/my_paper_writing_pipeline.html">&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;In this post, I want to share the pipeline that I use for writing research papers and then discussing them with my Ph.D. supervisor. The primary motivation to write this post and was to make communication with my supervisor who does not use &lt;a href=&quot;https://www.latex-project.org/&quot;&gt;LaTeX&lt;/a&gt; as smooth as possible. He also supervised my bachelor’s as well as master’s theses that I wrote using &lt;a href=&quot;https://www.microsoft.com/sk-sk/microsoft-365/word&quot;&gt;MS Word&lt;/a&gt;. Thanks to the revision system, our discussions about changes were flawless and the whole process was quick. However, since the beginning of my Ph.D. studies in the applied computer science program, I have relied solely on LaTeX to write my papers (for obvious reasons) and to produce the final PDF file. Thus, we ended up adding suggestions, comments, and highlights of modifications to the PDF file itself, which was rather cumbersome. Moreover, little changes in phrasing or just spelling corrections could hardly be caught. This got me thinking about whether there was a revision system for LaTeX that provided at least similar capabilities to MS Word. It turned out, there was such a service as part of paid &lt;a href=&quot;https://www.overleaf.com/&quot;&gt;Overleaf&lt;/a&gt; license, but I wanted something free. To this end, I created my process to circumvent the obstacles of having to highlight changes manually in the PDF file. I managed to resolve the problem of producing &lt;em&gt;diff-like&lt;/em&gt; PDF files based on LaTeX sources completely free and quickly. With this in mind, the main &lt;strong&gt;contribution&lt;/strong&gt; of this tutorial is as follows:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;I show how to effectively &lt;strong&gt;incorporate &lt;em&gt;diff&lt;/em&gt; mechanism when using&lt;/strong&gt; LaTeX (similar to revision system in MS Word to easily disseminate the modifications with other people, even with the ones who do not use LaTeX by themselves.&lt;/li&gt;
  &lt;li&gt;I provide an &lt;strong&gt;example of my work pipeline&lt;/strong&gt; for inspiration to see how I approach writing and managing research papers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h1&gt;

&lt;p&gt;I am going to assume that the reader knows how to use LaTeX, either remotely or locally. I think that unless the reader has enough experience with LaTeX, then my motivation and subsequent recommendation would not be fully understood. To make things easier and to describe my current work pipeline, I am going to demonstrate the process using &lt;a href=&quot;https://www.overleaf.com/&quot;&gt;Overleaf&lt;/a&gt;. Even though &lt;a href=&quot;https://www.overleaf.com/&quot;&gt;Overleaf&lt;/a&gt; is a perfect tool for remote work with LaTeX documents, we still need to exploit local applications to produce &lt;em&gt;diff&lt;/em&gt;s.&lt;/p&gt;

&lt;p&gt;I recommend the user to install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;texlive-full&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The two tools that we are going to rely on are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ctan.org/pkg/latexpand&quot;&gt;latexpand&lt;/a&gt; - &lt;em&gt;Latexpand&lt;/em&gt; is a Perl script that simply replaces &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\input&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\include&lt;/code&gt; commands with the content of the input or included file.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ctan.org/pkg/latexdiff&quot;&gt;latexdiff&lt;/a&gt; - &lt;em&gt;Latexdiff&lt;/em&gt; is a Perl script for visual mark up and revision of significant differences between two LaTeX files. Various options are available for visual markup using standard LaTeX packages such as color. Changes not directly affecting visible text, for example in formatting commands, are still marked in the LaTeX source. A rudimentary revision facility is provided by another Perl script, latexrevise, which accepts or rejects all changes. Manual editing of the difference file can be used to override this default behavior and accept or reject selected changes only.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;work-pipeline-demonstration&quot;&gt;Work Pipeline Demonstration&lt;/h1&gt;

&lt;h2 id=&quot;project-structure&quot;&gt;Project structure&lt;/h2&gt;

&lt;p&gt;I prefer to separate the contents of the paper into multiple source files. I am a programmer, and I use LaTeX due to its programming-like approach (among other things). I guess separation of concerns and reduction of coupling are well-established manners that programmers should adhere to all the time. Concerning this, I always (give or take) create the following structure:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;main.tex
references.bib
\sections\introduction.tex
\sections\related_work.tex
\sections\methodology.tex
\sections\experiments.tex
\sections\conclusion.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The structure would change a little from paper the paper, but you get the gist.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.tex&lt;/code&gt; file thus contains all these sections included like this:&lt;/p&gt;

&lt;div class=&quot;language-latex highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\documentclass&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;[10pt,twocolumn]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;article&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;[a4paper,portrait,width=170mm,top=20mm,bottom=20mm]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;geometry&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;graphicx&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;[numbers]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;natbib&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% Provides \text{} command in the math mode.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;amsmath&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\renewcommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\figurename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;Fig.&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% To enable \mathbb{} macro and many others.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;amssymb&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;times&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 

&lt;span class=&quot;c&quot;&gt;% To enable \mathbbm{} macro.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;bbm&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% Nice fractions formatted as a/b.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;nicefrac&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% Automatic line breaking of displayed equations.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;breqn&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% Multi-column tables.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;multicol&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;multirow&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;[font={small,it},labelfont=bf]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;caption&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% Top, middle, and bottom rules in tables.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;booktabs&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;[colorlinks=true,
            linkcolor=red,
            urlcolor=green,
            citecolor=blue]&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;hyperref&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;\begin{document}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Paper title&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Author information&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\maketitle&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;sections/introduction&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;sections/related&lt;span class=&quot;p&quot;&gt;_&lt;/span&gt;work&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;sections/methodology&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;sections/experiments&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;sections/conclusion&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\section*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Acknowledgment&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\bibliographystyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;unsrt&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\bibliography&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;references&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;\end{document}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Individual files have the following content. For example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;introduction.tex&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-latex highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Introduction&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;sec:introduction&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;related_work.tex&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-latex highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Related Work&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;sec:related&lt;span class=&quot;p&quot;&gt;_&lt;/span&gt;work&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;methodology.tex&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-latex highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Methodology&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;sec:methodology&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;experiments.tex&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-latex highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Experiments&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;sec:experiments&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and the last file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;conclusion.tex&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-latex highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Conclusion&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;sec:conclusion&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The reason why I am showing this hierarchy is that to produce the &lt;em&gt;diff&lt;/em&gt; file, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;latexdiff&lt;/code&gt; command requires the old and the new file. However, we now have multiple files, so we will have to merge them before finding differences. Just for the record, having to produce a single may also be required for certain publications, so that may be one more reason for me to show you a way to do it.&lt;/p&gt;

&lt;h2 id=&quot;merging-files&quot;&gt;Merging files&lt;/h2&gt;

&lt;p&gt;To produce a single LaTeX file from multiple sub-files, we need to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;latexpand&lt;/code&gt; command. The usage is simple. Just provide the name of the root file and every other referred sub-file will be &lt;em&gt;expanded&lt;/em&gt; by the pre-processor. In our case, we may use:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;latexpand main.tex &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; main_flat.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;creating-diff-latex-file&quot;&gt;Creating &lt;em&gt;diff&lt;/em&gt; LaTeX file&lt;/h2&gt;

&lt;p&gt;To generate the &lt;em&gt;diff&lt;/em&gt;-like LaTeX source file reflecting changes between the two versions of the same document, we will employ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;latexdiff&lt;/code&gt; utilize as follows:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;latexdiff main_orig_flat.tex main_new_flat.tex &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; main_diff.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It takes two files, the &lt;em&gt;old&lt;/em&gt; and the &lt;em&gt;new&lt;/em&gt; version of the document, and produces the &lt;em&gt;diff&lt;/em&gt;-like output. As you can see, we may only provide two source files. That’s why we have to merge sub-files (see the previous step for details).&lt;/p&gt;

&lt;p&gt;At some point, I had trouble with generating the &lt;em&gt;diff&lt;/em&gt; file when I made certain changes in tables and figures. To remedy this, try:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;latexdiff --config=&quot;PICTUREENV=(?:picture|DIFnomarkup|align|tabular)[\w\d*@]*&quot; main_orig_flat.tex main_new_flat.tex &amp;gt; main_diff.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;putting-it-all-together&quot;&gt;Putting it all together&lt;/h2&gt;

&lt;p&gt;Here is the script (I named it &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;diff_paper_latex.tex&lt;/code&gt;) that can produce the &lt;em&gt;diff&lt;/em&gt;-like LaTeX source file between two versions of the same LaTeX document.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/bash&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$3&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
latexpand main.tex &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ../&lt;span class=&quot;nv&quot;&gt;$3&lt;/span&gt;/main_orig_flat.tex
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;
latexpand main.tex &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ../&lt;span class=&quot;nv&quot;&gt;$3&lt;/span&gt;/main_new_flat.tex
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$3&lt;/span&gt;
latexdiff &lt;span class=&quot;nt&quot;&gt;--config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PICTUREENV=(?:picture|DIFnomarkup|align|tabular)[&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\w\d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;*@]*&quot;&lt;/span&gt; main_orig_flat.tex main_new_flat.tex &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; main_diff.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The script requires the names of three directories. The first is the directory of the old document version that contains the main.tex file. The second directory is the corresponding new version of the same document. The third document is the output directory into which the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_diff.tex&lt;/code&gt; file will be saved (besides the two auxiliary files). The script may be executed as follows:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./diff_paper_latex.sh paper_version_old paper_version_new paper_version_diff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After this step, all that remains is to grab the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_diff.tex&lt;/code&gt; file and either compile it locally or put it into some remote server (e.g., Overleaf) to show it there. It is a regular LaTeX file as any other, thus one may incorporate it into the existing compilation pipeline easily.&lt;/p&gt;

&lt;h1 id=&quot;example&quot;&gt;Example&lt;/h1&gt;

&lt;p&gt;For simplicity’s sake, assume that we have two versions of the same LaTeX document contained only in a single source file. The content of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_orig.tex&lt;/code&gt; file is:&lt;/p&gt;

&lt;div class=&quot;language-latex highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\documentclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;article&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;[utf8]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;inputenc&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\pagenumbering&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;gobble&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Sample Document&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;August 2021&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;\begin{document}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\maketitle&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Introduction&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

Here is a short sentence in the introduction. This sentence will be removed in the new version. And another sentence will be appended after this one. Stay tuned!

&lt;span class=&quot;nt&quot;&gt;\end{document}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;whereas the content of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_new.tex&lt;/code&gt; conveys the changes shown below:&lt;/p&gt;

&lt;div class=&quot;language-latex highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\documentclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;article&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;[utf8]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;inputenc&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\pagenumbering&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;gobble&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Sample Document&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;August 2021&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;\begin{document}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\maketitle&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Introduction&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

Here is a short sentence in the introduction. And another sentence will be appended after this one. New content has been inserted into the document. Stay tuned!

&lt;span class=&quot;k&quot;&gt;\

\noindent&lt;/span&gt; Thanks for reading!

&lt;span class=&quot;nt&quot;&gt;\end{document}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The corresponding produced &lt;em&gt;diff&lt;/em&gt;-like LaTeX source file looks like this (the default definitions were stripped for clarity - but you get the idea):&lt;/p&gt;

&lt;div class=&quot;language-latex highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\documentclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;article&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;%DIF LATEXDIFF DIFFERENCE FILE&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;%DIF DEL main_orig.tex   Mon Aug 16 09:52:34 2021&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;%DIF ADD main_new.tex    Mon Aug 16 09:52:34 2021&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;[utf8]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;inputenc&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\pagenumbering&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;gobble&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Sample Document&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;August 2021&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% !!! HERE WOULD BE A LIST OF AUTOMATICALLY GENERATED DEFINITIONS BY THE LATEXDIFF TOOL.&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;\begin{document}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\maketitle&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Introduction&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

Here is a short sentence in the introduction.&lt;span class=&quot;k&quot;&gt;\DIFdelbegin&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\DIFdel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;This sentence will be removed in the new version. &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\DIFdelend&lt;/span&gt; And another sentence will be appended after this one. &lt;span class=&quot;k&quot;&gt;\DIFdelbegin&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\DIFdel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Stay tuned&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\DIFdelend&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\DIFaddbegin&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\DIFadd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;A new content has been inserted into the document. Stay tuned!
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\DIFadd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;\noindent&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\DIFadd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Thanks for reading&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\DIFaddend&lt;/span&gt; !

&lt;span class=&quot;nt&quot;&gt;\end{document}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When compiled and rendered, we have a nice looking PDF. To demonstrate, here we have the three files in the same order rendered:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/document_render_orig.jpg&quot; alt=&quot;original-LaTeX-document&quot; class=&quot;img-responsive&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;Original LaTeX document.&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/document_render_new.jpg&quot; alt=&quot;new-LaTeX-document&quot; class=&quot;img-responsive&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;New (modified) LaTeX document.&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/document_render_diff.jpg&quot; alt=&quot;diff-LaTeX-document&quot; class=&quot;img-responsive&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;Diff-like LaTeX document for revision.&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;I hope that the process described above was easy to comprehend and that you learned something. To my mind, having mastered LaTeX is a must on a personal level if someone wants to quickly write technical research papers. But still, not everyone shares this view. Each to their own. To find some common ground between the MS Word and LaTeX world, I think that working on the level of PDF file carrying annotations depicting differences makes the communication between co-authors or article reviewers much faster. I tried it personally. I suggest you try it for yourself, too.&lt;/p&gt;</content><author><name></name></author><category term="tutorial" /><summary type="html">In this post, I show how I approach writing research papers using LaTeX.</summary></entry><entry><title type="html">Formula for expanding a^n - b^n.</title><link href="http://localhost:4000/mathematics/2021/05/04/an_minus_bn_formula.html" rel="alternate" type="text/html" title="Formula for expanding a^n - b^n." /><published>2021-05-04T09:00:00+00:00</published><updated>2021-05-04T09:00:00+00:00</updated><id>http://localhost:4000/mathematics/2021/05/04/an_minus_bn_formula</id><content type="html" xml:base="http://localhost:4000/mathematics/2021/05/04/an_minus_bn_formula.html">&lt;p&gt;Today, I came across the following formula:&lt;/p&gt;

\[a^n - b^n = \left( a - b \right) \left( a^{n - 1} + a^{n - 2}b + a^{n - 3}b^2 + \dots + a^2b^{n - 3} + ab^{n - 1} + b^{n - 1} \right).\]

&lt;p&gt;Or, expressed more compactly:&lt;/p&gt;

\[a^n - b^n = \left( a - b \right) \sum_{k = 0}^{n - 1} a^{\left( n - 1\right) - k} b^k.\]

&lt;p&gt;My immediate thought was to figure out how someone could have had come up with that formula in the first place. After pondering about it a little bit, I learned about the derivation described below.&lt;/p&gt;

&lt;p&gt;Allegedly, one way to derive this expansion is to think about the sum of the geometric series. As a reminder, here we have the well-known formula for the sum of the first \(n\) terms of geometric series:&lt;/p&gt;

\[S_n = 1 + x + x^2 + x^3 + \dots + x^{n - 1} + x^{n} = \frac{1 - q^{n + 1}}{1 - q}.\]

&lt;p&gt;The key idea to producing the formula for expanding the expression \(a^n - b^n\) is to derive the formula for the sum of geometric series since it mysteriously involves a similar-looking \(1 - x^n\) term.&lt;/p&gt;

&lt;p&gt;With this in mind, let’s start. I will use the standard trick of having the original sum multiplied by \(x\) and subtracted the resulting series from the original. To demonstrate, assume&lt;/p&gt;

\[\begin{aligned}
&amp;amp;S = 1 + x + x^2 + x^3 + \dots + x^{n - 1},\\

&amp;amp;xS = x + x^2 + x^3 + \dots + x^{n - 1} + x^n.
\end{aligned}\]

&lt;p&gt;Now, subtracting the second equation from the first yields&lt;/p&gt;

\[\begin{aligned}
&amp;amp;S - Sx = 1 + \left( x - x \right) + \left( x^2 - x^2 \right) + \dots + \left( x^{n - 1} - x^{n - 1} \right) - x^n,\\

&amp;amp;S - Sx = 1 - x^n,\\

&amp;amp;S \left( 1 - x \right) = 1 - x^n.
\end{aligned}\]

&lt;p&gt;When we substitute the value of \(S\) into the last equation, we get&lt;/p&gt;

\[\left( 1 + x + x^2 + x^3 + \dots + x^{n - 1} \right) \left( 1 - x \right) = 1 - x^n.\]

&lt;p&gt;At this point, our expression starts to become very similar to our ultimate goal stated at the beginning. However, there is still one more substitution to be done before pure algebraic manipulations come into place. Admittedly, I could not come up with this substitution quickly by myself. The truth is, I did not try for too long, but still, I feel that ideas of this type are one of my weaknesses. I reckon it takes a little bit of insight into the problem itself and a good deal of creativity. Nevertheless, for the sake of learning, I consider the solution to be generally applicable. Always keep asking yourself where you want to get in the end, whether it is proving a theorem or just solving a problem. Keep in mind that substitution is a reasonable approach to take. Remember how integration may be simplified using substitution. Speaking of integration, a change in coordinates comes to mind, too. Trigonometric equations are also often tackled with substitution. I remember that I have encountered many times how substitution did the trick. I look at this problem through a similar lens. So, what should we substitute for \(x\), then? Think of it this way. We want to transform the expression \(1 - x^n\) into \(a^n - b^n\). Thus, let’s go with \(x = \frac{b}{a}\), which produces&lt;/p&gt;

\[\begin{aligned}
\left[ 1 + \frac{b}{a} + {\left( \frac{b}{a} \right) }^2 + {\left( \frac{b}{a} \right) }^3 + \dots + {\left( \frac{b}{a} \right) }^{n - 1} \right] \left( 1 - {\frac{b}{a}} \right) = 1 - {\left( \frac{b}{a} \right) }^n,\\

\left( 1 + \frac{b}{a} + \frac{b^2}{a^2} + \frac{b^3}{a^3} + \dots + \frac{b^{n - 1}}{a^{n - 1}} \right) \left( 1 - {\frac{b}{a}} \right) = 1 - \frac{b^n}{a^n}.\\
\end{aligned}\]

&lt;p&gt;Now, multiply both sides of the last equation by \(a^n\) and further manipulate the equality as follows:&lt;/p&gt;

\[\begin{aligned}
a^n \left( 1 - {\frac{b}{a}} \right) \left( 1 + \frac{b}{a} + \frac{b^2}{a^2} + \frac{b^3}{a^3} + \dots + \frac{b^{n - 1}}{a^{n - 1}} \right) = a^n - b^n,\\

\left( a^n - a^{n - 1}b \right) \left( 1 + \frac{b}{a} + \frac{b^2}{a^2} + \frac{b^3}{a^3} + \dots + \frac{b^{n - 1}}{a^{n - 1}} \right) = a^n - b^n,\\

a^{n - 1} \left( a - b \right) \left( 1 + \frac{b}{a} + \frac{b^2}{a^2} + \frac{b^3}{a^3} + \dots + \frac{b^{n - 1}}{a^{n - 1}} \right) = a^n - b^n,\\

\left( a - b \right) a^{n - 1}  \left( 1 + \frac{b}{a} + \frac{b^2}{a^2} + \frac{b^3}{a^3} + \dots + \frac{b^{n - 1}}{a^{n - 1}} \right) = a^n - b^n,\\

\left( a - b \right)  \left( a^{n - 1} + a^{n - 1}\frac{b}{a} + a^{n - 1}\frac{b^2}{a^2} + a^{n - 1}\frac{b^3}{a^3} + \dots + a^{n - 1}\frac{b^{n - 1}}{a^{n - 1}} \right) = a^n - b^n,\\

\left( a - b \right)  \left( a^{n - 1} + a^{n - 2}b + a^{n - 3}b^2 + a^{n - 4}b^3 + \dots + b^{n - 1} \right) = a^n - b^n.\\
\end{aligned}\]

&lt;p&gt;This problem reminds me of one talk by Simon Sinek regarding how people cannot ignore the negative (&lt;a href=&quot;https://www.youtube.com/watch?v=W05FYkqv7hM&quot;&gt;see here&lt;/a&gt;). Let me elaborate. He started to talk by showing that people cannot avoid thinking of an elephant when told: “&lt;em&gt;do not think of an elephant&lt;/em&gt;.” Later on, he expanded on this idea by discussing how skiers should not focus on “&lt;em&gt;not hitting the trees&lt;/em&gt;” but they should focus on “staying on the path.” In essence, I have encountered something similar with this problem as well. Just focusing on where I want to get in the end seems to be sufficient to guide me through the whole derivation of this formula. I do hope I will be able to recreate this in several months without brushing up!&lt;/p&gt;</content><author><name></name></author><category term="mathematics" /><summary type="html">In this post, I show how to derive a formula for expanding a^n - b^n.</summary></entry></feed>